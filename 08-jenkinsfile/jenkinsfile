pipeline {
  agent any
  options {
      timestamps()
  }
  environment {
      NEXUS_IP="192.168.59.90"
      STAGING_IP="192.168.59.80"
      PRODUCTION_IP="192.168.59.85"
      NEXUS_REPO="word-cloud-app"
      CREDS="nexus-creds"
  }
  stages {
      stage ("Get source code") {
          steps {
              cleanWs()
              git(
                branch: 'master',
                changelog: false,
                poll: false,
                url: 'https://github.com/IluaRoot/word-cloud-generator.git'
              )
          }                        
      }
      stage ('Build word-cloud') {
          tools {
              go 'go 1.16'
          }
          steps {
              sh '''
                echo "Cheking files"
                make lint && make test
                echo "{ \\"version\\": \\"1.$BUILD_NUMBER\\" }" >static/version

                GOOS=linux GOARCH=amd64 go build -o ./artifacts/word-cloud-generator -v .

                md5sum artifacts/word-cloud-generator
                gzip artifacts/word-cloud-generator

                ls -l artifacts/
            '''    

              nexusArtifactUploader (
                   artifacts: [
                       [ 
                          artifactId: 'word-cloud-generator',
                          classifier: '',
                          file: 'artifacts/word-cloud-generator.gz',
                          type: 'gz'
                       ]

                   ],
                   credentialsId: '$CREDS',
                   groupId: '1',
                   nexusUrl: "$NEXUS_IP:8081/",
                   nexusVersion: 'nexus3',
                   protocol: 'http',
                   repository: "$NEXUS_REPO",
                   version: '$BUILD_NUMBER'
              )     
          }
      }
      stage ('Deploy on staging'){
          steps {
              withCredentials([usernamePassword(credentialsId: '$CREDS', passwordVariable: 'NEXUS_DOWNLOAD_PASSWORD', usernameVariable: 'NEXUS_DOWNLOAD_USER')]){
                sh '''
                 SSHPASS='vagrant' sshpass -e ssh -o StrictHostKeyChecking=no vagrant@$STAGING_IP "sudo systemctl stop wordcloud"
                 SSHPASS='vagrant' sshpass -e ssh -o StrictHostKeyChecking=no vagrant@$STAGING_IP "curl -X GET -u $NEXUS_DOWNLOAD_USER:$NEXUS_DOWNLOAD_PASSWORD "http://$NEXUS_IP:8081/repository/$NEXUS_REPO/1/word-cloud-generator/${BUILD_NUMBER}/word-cloud-generator-${BUILD_NUMBER}.gz" -o /opt/wordcloud/word-cloud-generator.gz"
                 SSHPASS='vagrant' sshpass -e ssh -o StrictHostKeyChecking=no vagrant@$STAGING_IP "gunzip -f /opt/wordcloud/word-cloud-generator.gz"
                 SSHPASS='vagrant' sshpass -e ssh -o StrictHostKeyChecking=no vagrant@$STAGING_IP "chmod +x /opt/wordcloud/word-cloud-generator"
                 SSHPASS='vagrant' sshpass -e ssh -o StrictHostKeyChecking=no vagrant@$STAGING_IP "sudo systemctl start wordcloud"
                ''' 
              } 
          }
      }
      stage ('Integration tests'){
        parallel {
          stage ('Integration test 1'){
          steps {
              sh '''
                res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://$STAGING_IP:8888/api | jq '. | length'`
                if [ "7" != "$res" ]; then
                  exit 99
                fi
              '''
          }
         }
         stage ('Integration test 2'){
          steps {
              sh '''
                res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://$STAGING_IP:8888/api | jq '. | length'`
                if [ "7" != "$res" ]; then
                  exit 99
                fi
              '''
          }
        }
       }
      }
      stage ('Upload to production'){
          steps {
              withCredentials([usernamePassword(credentialsId: '$CREDS', passwordVariable: 'NEXUS_DOWNLOAD_PASSWORD', usernameVariable: 'NEXUS_DOWNLOAD_USER')]){
                sh '''
                  SSHPASS='vagrant' sshpass -e ssh -o StrictHostKeyChecking=no vagrant@$PRODUCTION_IP "sudo systemctl stop wordcloud"
                  SSHPASS='vagrant' sshpass -e ssh -o StrictHostKeyChecking=no vagrant@$PRODUCTION_IP "curl -X GET -u $NEXUS_DOWNLOAD_USER:$NEXUS_DOWNLOAD_PASSWORD http://$NEXUS_IP:8081/repository/$NEXUS_REPO/1/word-cloud-generator/${BUILD_NUMBER}/word-cloud-generator-${BUILD_NUMBER}.gz -o /opt/wordcloud/word-cloud-generator.gz"
                  SSHPASS='vagrant' sshpass -e ssh -o StrictHostKeyChecking=no vagrant@$PRODUCTION_IP "gunzip -f /opt/wordcloud/word-cloud-generator.gz"
                  SSHPASS='vagrant' sshpass -e ssh -o StrictHostKeyChecking=no vagrant@$PRODUCTION_IP "chmod +x /opt/wordcloud/word-cloud-generator"
                  SSHPASS='vagrant' sshpass -e ssh -o StrictHostKeyChecking=no vagrant@$PRODUCTION_IP "sudo systemctl start wordcloud"
                ''' 
              } 
          }
      }
   }
 }